---
name: Theresa CI/CD

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:
  cancel-previous:
    name: Cancel Previous Runs In Order to Allocate Action Resources Immediately for Current Run
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.10.1
        if: ${{github.ref != 'refs/head/master'}}
        with:
          access_token: ${{ github.token }}

  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        test: [
          {test-file: "test_models/asr/test__init__.py", requirements-file: "test_models/asr/requirements.txt"},
          {test-file: "mlflow_models/HanLPner/test_parser.py", requirements-file: "mlflow_models/HanLPner/requirements.txt"}
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip3 install -r ${{ matrix.test.requirements-file }}
      - name: Run all tests
        run: python3 -m unittest ${{ matrix.test.test-file }}

  integration-tests:
    needs: tests
    runs-on: ubuntu-latest
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        test-command: [
          "curl --location 'localhost:8000/model1' --form 'audio=@\".github/audios/test.mp3\"'",
          "curl --location 'localhost:8000/model2' --form 'audio=@\".github/audios/test.wav\"'"
        ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip3 install -r test_models/asr/requirements.txt
      - name: Start server
        run: |
          cd test_models
          touch asr/theresa.log
          gunicorn \
            -w 4 \
            -b 0.0.0.0 \
            --timeout 600 \
            --limit-request-line 0 \
            --log-file asr/theresa.log \
            --log-level DEBUG \
            'asr:create_app()' &
      - name: Wait until server is up
        run: |
          npm install -g wait-on
          wait-on http://0.0.0.0:8000/healthcheck
      - name: Test model
        run: |
          if ${{ matrix.test-command }}; then
            exit 0
          else
            cat test_models/asr/theresa.log
            exit 1
          fi

  deployment:
    needs: integration-tests
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      outcome: ${{ job.status }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to AWS
        uses: QubitPi/hashicorp-aws@master
        with:
          packer-dir: hashicorp/images/asr-test
          terraform-dir: hashicorp/instances/asr-test
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

  slack-notification-pr:
    name: Send Slack Notification
    if: github.ref != 'refs/heads/master'
    needs: integration-tests
    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.integration-tests.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}

  slack-notification-master:
    name: Send Slack Notification
    if: github.ref == 'refs/heads/master'
    needs: deployment
    uses: QubitPi/hashicorp-aws/.github/workflows/slack-notification.yml@master
    with:
      job-status: ${{ needs.deployment.outputs.outcome }}
    secrets:
      slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
