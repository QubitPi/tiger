---
name: Theresa CI/CD

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

env:
  HASHICORP_PRODUCT_VERSION: "latest"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: python3 -m pip install .
      - name: Setup tests
        run: pip3 install '.[test]'
      - name: Run all tests
        run: |
          # "exported" env variables do NOT persist across action steps. So we co-locate them with test command
          export APP_CONFIG_FILE=${{ github.workspace }}/tests/settings.test.cfg
          pytest

  release:
    name: Release IAM image to AWS and Deploys its instance to EC2
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hashicorp
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Load custom environment variables into Packer variable file and inject Flask configs
        working-directory: hashicorp/images
        run: |
          sed -i -e 's/GH_PAT_READ_INJECTED_BY_CI_CD/${{ secrets.GH_PAT_READ }}/g' theresa.auto.pkrvars.hcl
          sed -i -e 's/X_RAPIDAPI_KEY_MICROSOFT_LANGUAGE_DETECTION_INJECTED_BY_CI_CD/${{ secrets.X_RAPIDAPI_KEY_MICROSOFT_LANGUAGE_DETECTION }}/g' settings.cfg
          sed -i -e 's/GOOGLE_KNOWLEDGE_GRAPH_API_KEY_INJECTED_BY_CI_CD/${{ secrets.GOOGLE_KNOWLEDGE_GRAPH_API_KEY }}/g' settings.cfg
          sed -i -e 's/OPEN_AI_API_KEY_INJECTED_BY_CI_CD/${{ secrets.OPEN_AI_API_KEY }}/g' settings.cfg

      - name: Publish Theresa AMI image and deploy it to EC2 through HashiCorp
        uses: QubitPi/hashicorp-aws@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
